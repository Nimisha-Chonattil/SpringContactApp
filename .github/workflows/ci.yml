name: ci build
on: workflow_dispatch
      
          
jobs: 
    build:
      runs-on: ubuntu-latest
      steps: 
       - uses: actions/checkout@v3
         with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
       - name: Set up JDK 11
         uses: actions/setup-java@v3
         with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
       - name: Cache Maven packages
         uses: actions/cache@v3
         with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
       - name: Creating war artifacts using maven
         run: mvn clean package
       - name: Uploading artifacts to github
         uses: actions/upload-artifact@v3
         with: 
           name: "spring-contact-app"
           path: target/*.war
       - run: echo "${{ github.event.inputs.ARTIFACT_VERSION }}"
       - name: Sonar cloud scan
         uses: sonarsource/sonarcloud-github-action@master
         env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
    Upload_to_release: 
      needs: build
      runs-on: ubuntu-latest
      steps: 
        - name: Downloading artifacts
          uses: actions/download-artifact@v3
          with: 
            name: spring-contact-app
        - name: Archive Release
          uses: thedoctor0/zip-release@0.7.5
          with:
              type: 'zip'
              filename: 'app.zip'
        - name: creating release...
          id: create_release
          uses: actions/create-release@v1
          env: 
            GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          with: 
            tag_name: v${{github.run_number}}
            release_name: Release ${{github.run_number}}
        - name: Upload Release Asset
          id: upload-release-asset 
          uses: actions/upload-release-asset@v1
          env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
                upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
                asset_path: ./app.zip
                asset_name: app-${{github.run_number}}.zip
                asset_content_type: application/zip
